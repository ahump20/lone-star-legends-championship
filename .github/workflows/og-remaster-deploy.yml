name: OG Remaster - Championship Deployment

on:
  push:
    branches:
      - main
      - feature/og-remaster
    paths:
      - 'apps/og-remaster/**'
      - 'packages/rules/**'
      - 'content/og/**'
      - 'brand/**'
  
  pull_request:
    branches:
      - main
    paths:
      - 'apps/og-remaster/**'
  
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development

jobs:
  test:
    name: Test & Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 🏁 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🎨 Generate sprites
        run: |
          npm install canvas
          npx tsx tools/sprites/generate.ts
      
      - name: 🏗️ Build brand CSS
        run: npm run build:brand
      
      - name: ⚡ Performance audit
        run: node apps/og-remaster/performance-audit.cjs
      
      - name: 🧪 Run tests
        run: |
          # Test multiplayer server
          node apps/og-remaster/server/multiplayer-server.cjs &
          SERVER_PID=$!
          sleep 5
          node apps/og-remaster/test-multiplayer.cjs
          kill $SERVER_PID
      
      - name: 📊 Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: performance-audit
          path: |
            apps/og-remaster/performance-audit.log
            apps/og-remaster/lighthouse-report.html

  build:
    name: Build Production Bundle
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: 🏁 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🎨 Generate assets
        run: |
          npm install canvas
          npx tsx tools/sprites/generate.ts
          npm run build:brand
      
      - name: 🔨 Build production bundle
        run: |
          mkdir -p apps/og-remaster/dist
          
          # Copy game files
          cp -r apps/og-remaster/*.html apps/og-remaster/dist/
          cp -r apps/og-remaster/*.css apps/og-remaster/dist/
          cp -r apps/og-remaster/*.js apps/og-remaster/dist/
          cp -r apps/og-remaster/*.ts apps/og-remaster/dist/
          cp -r apps/og-remaster/manifest.json apps/og-remaster/dist/
          cp -r apps/og-remaster/sw.js apps/og-remaster/dist/
          
          # Copy directories
          cp -r apps/og-remaster/assets apps/og-remaster/dist/
          cp -r apps/og-remaster/audio apps/og-remaster/dist/
          cp -r apps/og-remaster/modes apps/og-remaster/dist/
          cp -r apps/og-remaster/renderer apps/og-remaster/dist/
          cp -r apps/og-remaster/ui apps/og-remaster/dist/
          cp -r apps/og-remaster/analytics apps/og-remaster/dist/
          cp -r apps/og-remaster/leaderboard apps/og-remaster/dist/
          
          # Copy shared packages
          mkdir -p apps/og-remaster/dist/packages
          cp -r packages/rules apps/og-remaster/dist/packages/
          
          # Copy content
          mkdir -p apps/og-remaster/dist/content
          cp -r content/og apps/og-remaster/dist/content/
      
      - name: 📤 Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: og-remaster-build
          path: apps/og-remaster/dist/

  deploy-cloudflare:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    environment:
      name: ${{ github.event.inputs.environment || 'production' }}
      url: https://blaze-og-remaster.pages.dev
    
    steps:
      - name: 🏁 Checkout code
        uses: actions/checkout@v4
      
      - name: 📥 Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: og-remaster-build
          path: dist
      
      - name: ☁️ Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: blaze-og-remaster
          directory: dist
          branch: main
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging'
    
    environment:
      name: staging
      url: https://blaze-og-baseball.vercel.app
    
    steps:
      - name: 🏁 Checkout code
        uses: actions/checkout@v4
      
      - name: 📥 Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: og-remaster-build
          path: dist
      
      - name: ▲ Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./dist

  deploy-multiplayer:
    name: Deploy Multiplayer Server
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 🏁 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐳 Build Docker image
        run: |
          cat > Dockerfile << EOF
          FROM node:20-alpine
          WORKDIR /app
          COPY package*.json ./
          RUN npm ci --only=production
          COPY apps/og-remaster/server/multiplayer-server.cjs ./
          EXPOSE 8787
          CMD ["node", "multiplayer-server.cjs"]
          EOF
          
          docker build -t blaze-og-multiplayer .
      
      - name: 🚀 Deploy to Cloud Run
        if: false # Enable when Google Cloud is configured
        run: |
          echo "Deploy multiplayer server to Google Cloud Run"
          # gcloud run deploy blaze-og-multiplayer \
          #   --image=gcr.io/${{ secrets.GCP_PROJECT }}/blaze-og-multiplayer \
          #   --platform=managed \
          #   --region=us-central1 \
          #   --allow-unauthenticated

  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-cloudflare]
    if: always()
    
    steps:
      - name: 📨 Send notification
        uses: 8398a7/action-slack@v3
        if: false # Enable when Slack is configured
        with:
          status: ${{ job.status }}
          text: |
            🏆 OG Remaster Deployment ${{ job.status }}
            🎮 Environment: ${{ github.event.inputs.environment || 'production' }}
            🔗 URL: https://blaze-og-remaster.pages.dev
            📊 Commit: ${{ github.sha }}
            👤 Actor: ${{ github.actor }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      
      - name: 🏆 Championship Status
        run: |
          echo "🏆 DEPLOYMENT COMPLETE"
          echo "⚾ OG Remaster is live!"
          echo "🌐 Production: https://blaze-og-remaster.pages.dev"
          echo "🎮 Multiplayer: wss://blaze-og-multiplayer.run.app"
          echo "📊 Analytics: Active"
          echo "🏆 Pattern Recognition Weaponized!"